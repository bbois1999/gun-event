// This is a sample model to get you started.

/// A sample data source using local sqlite db.
datasource db {
    provider = 'sqlite'
    url = 'file:./dev.db'
}

generator client {
    provider = "prisma-client-js"
}

plugin hooks {
  provider = '@zenstackhq/tanstack-query'
  target = 'react'
  version = 'v5'
  output = "./src/lib/hooks"
}

/// User model
model User {
    id       String @id @default(cuid())
    email    String @unique @email @length(6, 32)
    password String @password @omit
    posts    Post[]
    imagePosts ImagePost[]
    events    Event[]  // User can create events
    // everybody can signup
    @@allow('create', true)

    // full access by self
    @@allow('all', auth() == this)
}

/// Post model
model Post {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title     String   @length(1, 256)
    content   String
    published Boolean  @default(false)
    author    User     @relation(fields: [authorId], references: [id])
    authorId  String
    event     Event?   @relation(fields: [eventId], references: [id])
    eventId   String?

    // allow read for all signin users
    @@allow('read', auth() != null && published)

    // full access by author
    @@allow('all', author == auth())
}

// make this allow image uploads
model ImagePost {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title     String   @length(1, 256)
    content   String
    published Boolean  @default(false)
    author    User     @relation(fields: [authorId], references: [id])
    authorId  String
    image     String
    event     Event?   @relation(fields: [eventId], references: [id])
    eventId   String?
    
    // allow read for all signin users
    @@allow('read', auth() != null && published)

    // full access by author
    @@allow('all', author == auth())
}

/// Gun Show Event model
model Event {
    id          String      @id @default(cuid())
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    title       String      @length(1, 256)
    description String
    date        DateTime
    location    String
    organizer   String
    author      User        @relation(fields: [authorId], references: [id])
    authorId    String
    posts       Post[]
    imagePosts  ImagePost[]
    
    // Allow read access to everyone for public events
    @@allow('read', true)
    
    // Only the creator can update or delete events
    @@allow('create,update,delete', author == auth())
}
